{"name":"Migrate","tagline":"Node database migration tool","body":"# Node migrate\r\n\r\nNode migrate is a database migration tool inspired by Ruby on Rails migrations.\r\n\r\nIt will soon work for mysql, pgsql and sqlite.\r\n\r\n# Intallation\r\n\r\nNot yet released but it will be as easy as `npm`:\r\n\r\n```bash\r\nnpm install migrate -g\r\n```\r\n\r\n# Usage\r\n\r\n**Not working yet**\r\n\r\nTo create a new migration file simply run:\r\n\r\n```\r\nmigrate create <name of the migration>\r\n```\r\n\r\nTo execute the migrations:\r\n\r\n```\r\nmigrate update\r\n```\r\n\r\nOr just execute `migrate` without any parameters to see the full list of commands and options.\r\n\r\n# Creating migrations\r\n\r\nWhen you create a new migration file, it will look something like this :\r\n\r\n```javascript\r\nchange(function (shema) {\r\n    // Your code here\r\n});\r\n```\r\n\r\nWith `schema` you can do any of the following transformations:\r\n * `schema.createTable`\r\n * `schema.dropTable`\r\n * `schema.addColumn`\r\n * `schema.addIndex`\r\n * `schema.removeColumn`\r\n * `schema.removeIndex`\r\n\r\nHere is what a migration migth look like :\r\n\r\n```javascript\r\nchange(function (schema) {\r\n    schema.createTable('test', function (table) {\r\n        table.addColumn('id', 'int');\r\n        table.addColumn('name', 'string');\r\n        table.addColumn('text', 'text');\r\n        table.addColumn('num_added', 'int', { 'null':false, 'default':0 });\r\n        table.addColumn('num_modified', 'integer');\r\n        table.addColumn('creation_date', 'date');\r\n        table.addColumn('modification_date', 'date');\r\n    });\r\n});\r\n```\r\n\r\nThis migration will create a new table called `test` with all the listed columns.\r\n\r\n# License\r\n\r\n[MIT](http://mit-license.org/rumpl)\r\n\r\n","google":"UA-39039700-1","note":"Don't delete this file! It's used internally to help with page regeneration."}